{"version": null, "code": "gASVFwgAAAAAAAAoQxJ0AGQBfA58EWQCjQMBAGQAUwCUKIwFaW5wdXSUjAZvdXRwdXSUjAZwYXJhbXOUjAl3aWxkY2FyZHOUjAd0aHJlYWRzlIwJcmVzb3VyY2VzlIwDbG9nlIwHdmVyc2lvbpSMBHJ1bGWUjAljb25kYV9lbnaUjA1jb250YWluZXJfaW1nlIwQc2luZ3VsYXJpdHlfYXJnc5SMD3VzZV9zaW5ndWxhcml0eZSMC2Vudl9tb2R1bGVzlIwMYmVuY2hfcmVjb3JklIwFam9iaWSUjAhpc19zaGVsbJSMD2JlbmNoX2l0ZXJhdGlvbpSMD2NsZWFudXBfc2NyaXB0c5SMCnNoYWRvd19kaXKUjA1lZGl0X25vdGVib29rlIwPY29uZGFfYmFzZV9wYXRolIwHYmFzZWRpcpSMGHJ1bnRpbWVfc291cmNlY2FjaGVfcGF0aJSMGF9faXNfc25ha2VtYWtlX3J1bGVfZnVuY5R0lF2UKE5YiQYAAAogICAgICAgIG1rZGlyIC1wIHtwYXJhbXMub3V0X2ZvbGRlcn0KICAgICAgICBjYXQge2lucHV0fSB8IHNvcnQgfCBlZ3JlcCAtbyAiW0EtWl17ezQsNX19IiB8IHVuaXEgPiB7cGFyYW1zLmNvbW1vbn0udHh0CiAgICAgICAgZWNobyAiUmV0cmlldmVkIGNvbW1vbiBzdGFydGluZyBpZGVudGlmaWVycyBmb3IgdGhlIGJpb3NhbXBsZXMuIgogICAgICAgIGZvciBPVVRQVVQgaW4gJChjYXQge3BhcmFtcy5jb21tb259LnR4dCkKICAgICAgICBkbwogICAgICAgICAgICBjYXQge2lucHV0fSB8IHNvcnQgfCB1bmlxIHwgZ3JlcCAkT1VUUFVUID4ge3BhcmFtcy5mb2xkZXJ9JE9VVFBVVC50eHQKICAgICAgICAgICAgaWYgWyAkT1VUUFVUID0gIlNBTUVBIiBdCiAgICAgICAgICAgIHRoZW4KICAgICAgICAgICAgICAgIGVmZXRjaCAtaW5wdXQgIntwYXJhbXMuZm9sZGVyfSRPVVRQVVQudHh0IiAtZGIgYmlvc2FtcGxlIC1mb3JtYXQgbmF0aXZlIC1tb2RlIHRleHQgfCBncmVwIC1CMSAiQWNjZXNzaW9uOlx8SWRlbnRpZmllcnM6IiA+IHtwYXJhbXMub3V0X2ZvbGRlcn1TQU1FQV9kZXNjcmlwdGlvbnMudHh0CiAgICAgICAgICAgICAgICBlY2hvICJSZXRyaWV2ZWQgZGlzY3JpcHRpb25zIGZvciBTQU1FQSBiaW9zYW1wbGVzIgogICAgICAgICAgICBlbGlmIFsgJE9VVFBVVCA9ICJTQU1OIiBdCiAgICAgICAgICAgIHRoZW4KICAgICAgICAgICAgICAgIGVmZXRjaCAtaW5wdXQgIntwYXJhbXMuZm9sZGVyfSRPVVRQVVQudHh0IiAtZGIgYmlvc2FtcGxlIC1mb3JtYXQgbmF0aXZlIC1tb2RlIHRleHQgfCBncmVwICdicmVlZD1cfFNhbXBsZSBuYW1lPVx8SWRlbnRpZmllcnM6JyA+IHtwYXJhbXMub3V0X2ZvbGRlcn1TQU1OX2Rlc2NyaXB0aW9ucy50eHQKICAgICAgICAgICAgICAgIGVjaG8gIlJldHJpZXZlZCBkaXNjcmlwdGlvbnMgZm9yIFNBTU4gYmlvc2FtcGxlcyIKICAgICAgICAgICAgZWxpZiBbICRPVVRQVVQgPSAiU0FNRCIgXQogICAgICAgICAgICB0aGVuCiAgICAgICAgICAgICAgICBlZmV0Y2ggLWlucHV0ICJ7cGFyYW1zLmZvbGRlcn0kT1VUUFVULnR4dCIgLWRiIGJpb3NhbXBsZSAtZm9ybWF0IG5hdGl2ZSAtbW9kZSB0ZXh0IHwgIGdyZXAgInNhbXBsZSBjb21tZW50PVx8SWRlbnRpZmllcnM6IiA+IHtwYXJhbXMub3V0X2ZvbGRlcn1TQU1EX2Rlc2NyaXB0aW9ucy50eHQKICAgICAgICAgICAgICAgIGVjaG8gIlJldHJpZXZlZCBkaXNjcmlwdGlvbnMgZm9yIFNBTUQgYmlvc2FtcGxlcyIKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgZWNobyAiQmlvU2FtcGxlIGNvZGUgZG9lcyBub3QgbWF0Y2ggYW55IGNvZGUgZm9yIHdoaWNoIHRoZSBzY3JpcHQgd2FzIG1hZGUuIFRoZSBkZXNjcmlwdGlvbnMgb2YgdGhlIEJpb1NhbXBsZXMgYXJlIHRoZXJlZm9yZSByZXRyaXZlZCBpbiBmdWxsLCBidXQgd2lsIGxpa2VseSBub3QgYmUgcHJvY2Vzc2VkIGNvcnJlY3RseSBsYXRlciBvbiBpbiB0aGUgcGlwZWxpbmUuIgogICAgICAgICAgICAgICAgZWZldGNoIC1pbnB1dCAie3BhcmFtcy5mb2xkZXJ9JE9VVFBVVC50eHQiIC1kYiBiaW9zYW1wbGUgLWZvcm1hdCBuYXRpdmUgLW1vZGUgdGV4dCA+IHtwYXJhbXMub3V0X2ZvbGRlcn11bmtub3duX2Rlc2NyaXB0aW9ucy50eHQKICAgICAgICAgICAgZmkKICAgICAgICBkb25lCiAgICAgICAglGgPaBKGlGWMBXNoZWxslIWUdJQu", "rule": "retrieve_descriptionts", "input": ["intermediaries/test/92_biosamples.txt", "intermediaries/test/file_EVA1_biosamples.txt"], "log": [], "params": ["'intermediaries/test/'", "'intermediaries/test/common_id'", "'result/biosample_descriptions/test/'"], "shellcmd": "\n        mkdir -p result/biosample_descriptions/test/\n        cat intermediaries/test/92_biosamples.txt intermediaries/test/file_EVA1_biosamples.txt | sort | egrep -o \"[A-Z]{4,5}\" | uniq > intermediaries/test/common_id.txt\n        echo \"Retrieved common starting identifiers for the biosamples.\"\n        for OUTPUT in $(cat intermediaries/test/common_id.txt)\n        do\n            cat intermediaries/test/92_biosamples.txt intermediaries/test/file_EVA1_biosamples.txt | sort | uniq | grep $OUTPUT > intermediaries/test/$OUTPUT.txt\n            if [ $OUTPUT = \"SAMEA\" ]\n            then\n                efetch -input \"intermediaries/test/$OUTPUT.txt\" -db biosample -format native -mode text | grep -B1 \"Accession:\\|Identifiers:\" > result/biosample_descriptions/test/SAMEA_descriptions.txt\n                echo \"Retrieved discriptions for SAMEA biosamples\"\n            elif [ $OUTPUT = \"SAMN\" ]\n            then\n                efetch -input \"intermediaries/test/$OUTPUT.txt\" -db biosample -format native -mode text | grep 'breed=\\|Sample name=\\|Identifiers:' > result/biosample_descriptions/test/SAMN_descriptions.txt\n                echo \"Retrieved discriptions for SAMN biosamples\"\n            elif [ $OUTPUT = \"SAMD\" ]\n            then\n                efetch -input \"intermediaries/test/$OUTPUT.txt\" -db biosample -format native -mode text |  grep \"sample comment=\\|Identifiers:\" > result/biosample_descriptions/test/SAMD_descriptions.txt\n                echo \"Retrieved discriptions for SAMD biosamples\"\n            else\n                echo \"BioSample code does not match any code for which the script was made. The descriptions of the BioSamples are therefore retrived in full, but wil likely not be processed correctly later on in the pipeline.\"\n                efetch -input \"intermediaries/test/$OUTPUT.txt\" -db biosample -format native -mode text > result/biosample_descriptions/test/unknown_descriptions.txt\n            fi\n        done\n        ", "incomplete": false, "starttime": 1669387720.6305096, "endtime": 1669387788.908334, "job_hash": 8753515758920, "conda_env": null, "container_img_url": null, "input_checksums": {"intermediaries/test/92_biosamples.txt": "7321ae3b9f37a768e8ac5c01981fe85c7f0294132de069fb879b2cc8cf2a4ee7", "intermediaries/test/file_EVA1_biosamples.txt": "89a9b1ba5e541c91fc0fa0d585e4991f89d3de5d34e7a42cedb575f5a5e859f7"}}